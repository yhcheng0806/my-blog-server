{"version":3,"sources":["constants/actionTypes.js","utils/auth.js","router/authRoute.js","components/loader/index.js","router/routes.js","App.js","context/reducers/user.js","context/index.js","context/reducers/index.js","index.js","constants/routes.js"],"names":["LOGIN","LOGOUT","MODIFY_USERINFO","getUserInfo","JSON","parse","localStorage","getItem","setUserInfo","userInfo","setItem","stringify","AuthRoute","user","children","pathname","location","includes","ROUTES","to","Loader","routes","path","component","lazy","App","useSelector","state","fallback","map","exact","initState","result","userReducer","type","payload","clear","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","HOME","REGISTER","PROFILE","POSTINFO","SHARE","ERROR"],"mappings":"uGAAA,sGAAO,IAAMA,EAAQ,QAERC,EAAS,SACTC,EAAkB,mB,gCCH/B,oEAAO,IAAMC,EAAc,WACzB,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,cAG5BC,EAAc,SAACC,GAC1BH,aAAaI,QAAQ,WAAYN,KAAKO,UAAUF,M,uJCsBnCG,EAvBG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SACjBC,EAD0C,mCACvBC,SAAnBD,SAOR,OAAIF,EACKE,EAASE,SAASC,KACvB,cAAC,IAAD,CAAUC,GAAI,CAAEJ,SAAUG,OAE1B,mCAAGJ,IAIL,qCACE,cAAC,IAAD,CAAUK,GAAI,CAAEJ,SAAUG,OACzBJ,MCZQM,EARA,WACb,OACE,8CC8BWC,EA/BA,CACb,CACEC,KAAMJ,IACNK,UAAWC,gBAAK,kBAAM,gEAExB,CACEF,KAAMJ,IACNK,UAAWC,gBAAK,kBAAM,gEAExB,CACEF,KAAMJ,IACNK,UAAWC,gBAAK,kBAAM,mCAExB,CACEF,KAAMJ,IACNK,UAAWC,gBAAK,kBAAM,6EAExB,CACEF,KAAMJ,IACNK,UAAWC,gBAAK,kBAAM,uEAExB,CACEF,KAAMJ,IACNK,UAAWC,gBAAK,kBAAM,6EAExB,CACEF,KAAMJ,IACNK,UAAWC,gBAAK,kBAAM,0DCJXC,EAlBH,WAAO,IACTZ,EAASa,aAAY,SAACC,GAAD,OAAWA,KAAhCd,KAER,OACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUe,SAAU,cAAC,EAAD,IAApB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,CAAWf,KAAMA,EAAjB,SACGQ,EAAOQ,KAAI,gBAAGP,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACV,cAAC,IAAD,CAAOO,OAAK,EAAYR,KAAMA,EAAMC,UAAWA,GAA7BD,e,wBCd1BS,GAAuB,QAAX,EAAA5B,qBAAA,eAAe6B,SAAU,KAiB5BC,EAfK,WAA2C,IAA1CN,EAAyC,uDAAjCI,EAAiC,yCAApBG,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9C,OAAQD,GACN,KAAKlC,IAEH,OADAQ,YAAY2B,GACL,2BAAKR,GAAUQ,EAAQH,QAChC,KAAK/B,IAEH,OADAK,aAAa8B,QACN,KACT,KAAKlC,IACH,OAAO,2BAAKyB,GAAUQ,GACxB,QACE,OAAOR,ICZAU,ECAEC,YAAgB,CAAEzB,SCS3B0B,G,kBAAQC,YAAYH,EAAUI,YAAQC,YAAgBC,QAE5DC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,U,+BCnB1B,8OAAO,IAAMC,EAAO,IACPhD,EAAQ,SACRiD,EAAW,YACXC,EAAU,eACVC,EAAW,gBACXC,EAAQ,SACRC,EAAQ,W","file":"static/js/main.9465d886.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\nexport const REGISTER = \"REGISTER\";\nexport const LOGOUT = \"LOGOUT\";\nexport const MODIFY_USERINFO = \"MODIFY_USERINFO\"\n","export const getUserInfo = () => {\n  return JSON.parse(localStorage.getItem(\"userInfo\"));\n};\n\nexport const setUserInfo = (userInfo) => {\n  localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as ROUTES from \"../constants/routes\";\n\nconst AuthRoute = ({ user, children, ...props }) => {\n  const { pathname } = props.location;\n  // console.log(Object.values(ROUTES), \"--ROUTES\");\n\n  // if (!Object.values(ROUTES).includes(pathname)) {\n  //   return <Redirect to={{ pathname: ROUTES.ERROR }} />;\n  // }\n\n  if (user) {\n    return pathname.includes(ROUTES.LOGIN) ? (\n      <Redirect to={{ pathname: ROUTES.HOME }} />\n    ) : (\n      <>{children}</>\n    );\n  }\n  return (\n    <>\n      <Redirect to={{ pathname: ROUTES.LOGIN }} />\n      {children}\n    </>\n  );\n};\n\nexport default AuthRoute;\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <div>\n      loading...\n    </div>\n  )\n}\n\nexport default Loader\n\n","import { lazy } from \"react\";\nimport * as ROUTES from \"../constants/routes\";\n\nconst routes = [\n  {\n    path: ROUTES.LOGIN,\n    component: lazy(() => import(\"../pages/login\")),\n  },\n  {\n    path: ROUTES.REGISTER,\n    component: lazy(() => import(\"../pages/register\")),\n  },\n  {\n    path: ROUTES.ERROR,\n    component: lazy(() => import(\"../pages/error\")),\n  },\n  {\n    path: ROUTES.HOME,\n    component: lazy(() => import(\"../pages/home\")),\n  },\n  {\n    path: ROUTES.PROFILE,\n    component: lazy(() => import(\"../pages/profile\")),\n  },\n  {\n    path: ROUTES.SHARE,\n    component: lazy(() => import(\"../pages/share\")),\n  },\n  {\n    path: ROUTES.POSTINFO,\n    component: lazy(() => import(\"../pages/postInfo\")),\n  },\n];\n\nexport default routes;\n","import React, { Suspense } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport AuthRoute from \"./router/authRoute\";\nimport ReactLoader from \"./components/loader\";\n\nimport routes from \"./router/routes\";\n\nconst App = () => {\n  const { user } = useSelector((state) => state);\n\n  return (\n    <Router>\n      <Suspense fallback={<ReactLoader />}>\n        <Switch>\n          <AuthRoute user={user}>\n            {routes.map(({ path, component }) => (\n              <Route exact key={path} path={path} component={component} />\n            ))}\n          </AuthRoute>\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default App;\n","import { LOGIN, LOGOUT, MODIFY_USERINFO } from \"../../constants/actionTypes\";\nimport { getUserInfo, setUserInfo } from \"../../utils/auth\";\n\nconst initState = getUserInfo()?.result || null;\n\nconst userReducer = (state = initState, { type, payload }) => {\n  switch (type) {\n    case LOGIN:\n      setUserInfo(payload);\n      return { ...state, ...payload.result };\n    case LOGOUT:\n      localStorage.clear();\n      return null;\n    case MODIFY_USERINFO:\n      return { ...state, ...payload };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import combineReducers from './reducers'\n\n\n\nexport const reducers = combineReducers","import { combineReducers } from \"redux\";\n\nimport user from \"./user\";\n\nexport default combineReducers({ user });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport { reducers } from \"./context\";\n\nimport \"./styles/app.css\";\nimport \"antd/dist/antd.css\";\nimport 'emoji-mart/css/emoji-mart.css'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const HOME = '/'\nexport const LOGIN = '/login'\nexport const REGISTER = '/register'\nexport const PROFILE = '/p/:username'\nexport const POSTINFO = '/post/:postId'\nexport const SHARE = '/share'\nexport const ERROR = '/error'\n"],"sourceRoot":""}